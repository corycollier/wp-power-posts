<?xml version="1.0" encoding="UTF-8"?>
<project name="wp-power-posts" default="build">
  <!-- By default, we assume all tools to be on the $PATH -->

  <!-- bootstrap target, to ensure the ant-contrib jar is available -->
  <target name="bootstrap">
    <mkdir dir="${basedir}/build/html" />
    <mkdir dir="${user.home}/.ant/lib"/>
    <!-- <get dest="${user.home}/.ant/lib/ant-contrib.jar"
      src="http://search.maven.org/remotecontent?filepath=ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar" /> -->
      <get dest="${user.home}/.ant/lib/jsch-0.1.51.jar"
        src="http://sourceforge.net/projects/jsch/files/jsch.jar/0.1.51/jsch-0.1.51.jar" />
  </target>


  <!-- initialize the build system -->
  <target name="init" description="initializes the build system">
    <exec executable="git" dir="${basedir}" outputproperty="build.hash">
      <arg value="log" />
      <arg value="--format=%H" />
      <arg value="-n 1" />
    </exec>

    <tstamp>
      <format property="build.date" pattern="MM/dd/yyyy hh:mm aa" offset="0" unit="hour"/>
    </tstamp>

    <!-- Local properties -->
    <property name="build.tools" value="${basedir}/vendor/bin/"/>
    <property name="build.dir" value="${basedir}/build/html" />
    <property name="build.year" value="2014" />
    <property name="build.plugin" value="${basedir}/build/html/wp-content/plugins/${ant.project.name}" />
    <property name="ant.project.version" value="1.3.0" />

  </target>

  <!-- the default build target -->
  <target name="build"
         depends="prepare, init, lint, update-local-copy, update-doc-blocks, conform-to-wp-coding-standards, phpcs"
         description="the default build target"/>

  <!-- update the theme and plugin doc blocks -->
  <target name="update-doc-blocks" description="Replaces placeholders in docblocks with appropriate values">

    <replace token="@build-version@" value="${ant.project.version}">
      <fileset dir="${build.dir}">
        <include name="${build.plugin}/**" />
        <modified />
      </fileset>
    </replace>

    <replace token="@build-year@" value="${build.year}">
      <fileset dir="${build.dir}">
        <include name="${build.plugin}/**" />
        <modified />
      </fileset>
    </replace>

    <replace token="@build-name@" value="${ant.project.name}">
      <fileset dir="${build.dir}">
        <include name="${build.plugin}/**" />
        <modified />
      </fileset>
    </replace>

    <replace token="@build-hash@" value="${build.hash}">
      <fileset dir="${build.plugin}" />
    </replace>

  </target>

  <!-- Create the theme zip file -->
  <target name="create-zip-file">
    <zip destfile="${basedir}/build/dist/${ant.project.name}-${ant.project.version}.zip"
         basedir="${build.plugin}"
    />
  </target>

  <!-- Copy Files to local dev site -->
  <target name="update-local-copy">

    <!-- Wordpress itself -->
    <copy todir="${build.dir}">
      <fileset dir="${basedir}/wordpress/" >
        <exclude name="**/composer.json" />
        <exclude name="**/license.txt" />
        <exclude name="**/readme.html" />
      </fileset>
    </copy>

    <!-- Custom Plugin -->
    <copy todir="${build.plugin}">
      <fileset dir="${basedir}/src/wp-power-posts" />
    </copy>

    <!-- copy configuration files -->
    <copy toDir="${build.dir}">
      <fileset dir="${basedir}">
        <include name="**/wp-config.php" />
        <include name="**/.htaccess" />
        <include name="**/favicon.ico" />
        <exclude name="**/build/" />
        <exclude name="**/src/" />
        <exclude name="**/test/" />
      </fileset>
    </copy>

  </target>

  <!-- Clean up the artifact folders -->
  <target name="clean" unless="clean.done" description="Cleanup build artifacts" depends="init">
    <delete includeEmptyDirs="true">
      <fileset dir="${basedir}/build/html/">
        <include name="*/" />
        <exclude name="wp-content/uploads/" />
        <exclude name="wp-content/plugins/" />
      </fileset>
    </delete>

    <property name="clean.done" value="true"/>
  </target>

  <!-- Create the artifact folders -->
  <target name="prepare"
      unless="prepare.done"
      depends="clean"
      description="Prepare for build">
    <mkdir dir="${basedir}/build/api"/>
    <mkdir dir="${basedir}/build/coverage"/>
    <mkdir dir="${basedir}/build/logs"/>
    <mkdir dir="${basedir}/build/html"/>
    <property name="prepare.done" value="true"/>
  </target>

  <!-- php lint the source files -->
  <target name="lint" description="Perform syntax check of sourcecode files">
    <apply executable="php" failonerror="true">
      <arg value="-l" />

      <fileset dir="${basedir}/src">
        <include name="**/*.php" />
        <modified />
      </fileset>
    </apply>
  </target>

  <target name="phploc"
      depends="init"
      description="Measure project size using PHPLOC and print human readable output.">
    <exec executable="${build.tools}phploc">
      <arg path="${basedir}/src" />
    </exec>
  </target>


  <target name="phpcs"
      depends="init"
      description="Find coding standard violations using PHP_CodeSniffer and print human readable output. ">
    <exec executable="${build.tools}phpcs">
      <arg value="--standard=build/project.ruleset.xml" />
      <arg value="--extensions=php" />
      <arg path="${build.plugin}" />
    </exec>
  </target>


  <target name="phpcbf"
      depends="init"
      description="forces code cleanup">

    <exec executable="${build.tools}phpcbf">
      <arg value="--standard=build/project.ruleset.xml" />
      <arg value="--extensions=php" />
      <arg path="${build.plugin}" />
    </exec>

  </target>

  <!-- change all of the local coding standards to conform to WP standards -->
  <target name="conform-to-wp-coding-standards"
      depends="init"
      description="adjust build code to conform to Wordpress coding standards">

    <!-- replace the 4 space soft tab with a hard tab character -->
    <fixcrlf srcdir="${build.plugin}"
        includes="**/*.php"
        tab="add"
        tablength="2"
        encoding="utf-8"
        outputencoding="utf-8"
        eol="lf"
        eof="remove"
        fixlast="true"
        javafiles="no"
        />
  </target>


</project>
